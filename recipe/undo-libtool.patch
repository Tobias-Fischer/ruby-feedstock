diff --git a/Makefile.in b/Makefile.in
index fa1e19e..03a9cb7 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -203,7 +203,7 @@ RMDIRS        = @RMDIRS@
 RMALL         = @RMALL@
 NM            = @NM@
 AR            = @AR@
-ARFLAGS       = @ARFLAGS@$(empty)
+ARFLAGS       = @ARFLAGS@
 RANLIB        = @RANLIB@
 AS            = @AS@
 ASFLAGS       = @ASFLAGS@ $(INCFLAGS)
diff --git a/configure.ac b/configure.ac
index 2c4d288..19342a6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -294,23 +294,17 @@ AS_IF([test "$target_cpu" != "$host_cpu" -a "$GCC" = yes -a "$cross_compiling" =
     RUBY_DEFAULT_ARCH("$target_cpu")
 ])
 
-AS_CASE(["$target_os"], [darwin*], [
-if libtool 2>&1 | grep no_warning_for_no_symbols > /dev/null; then
-  ac_cv_prog_ac_ct_RANLIB=:
-  ac_cv_prog_ac_ct_AR='libtool -static'
-  rb_cv_arflags='-no_warning_for_no_symbols -o'
-fi
-])
 AC_CHECK_TOOLS(RANLIB, [${gcc_prefix}ranlib${gcc_suffix} ranlib], :)
 AC_CHECK_TOOLS(AR, [${gcc_prefix}ar${gcc_suffix} ar])
 AS_IF([test -z "$AR"], [
   AC_CHECK_PROGS(AR, aal, ar)
 ])
-AC_CACHE_CHECK([for $AR flags], [rb_cv_arflags], [
+AC_CACHE_CHECK([for $AR D option], [rb_cv_ar_D_option], [
     AS_IF([$AR rcD conftest.a > /dev/null 2>&1 && rm conftest.a],
-	[rb_cv_arflags=rcD], [rb_cv_arflags=rcu])
+	[rb_cv_ar_D_option=yes], [rb_cv_ar_D_option=no])
 ])
-AC_SUBST(ARFLAGS, ["$rb_cv_arflags "])
+AS_IF([test "$rb_cv_ar_D_option" = yes], [ARFLAGS='rcD '], [ARFLAGS='rcu '])
+AC_SUBST(ARFLAGS)
 
 AC_CHECK_TOOL(AS, as)
 ASFLAGS=$ASFLAGS
